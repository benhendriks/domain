{"version":3,"sources":["components/Nav.js","components/Footer.js","pages/Home.js","pages/About.js","pages/Recipies.js","pages/Easyswaps.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","src","alt","Footer","Home","href","About","Recipies","EasySwaps","Contact","App","path","exact","component","Easyswaps","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+PAgCeA,EA5BL,kBAER,yBAAKC,UAAU,OACb,6BACE,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMC,GAAG,YACP,yBAAKC,IAAI,GAAGC,IAAI,uBAGlB,wBAAIH,UAAU,aACZ,kBAAC,IAAD,CAAMC,GAAG,UACP,sCAEF,kBAAC,IAAD,CAAMA,GAAG,aACP,yCAEF,kBAAC,IAAD,CAAMA,GAAG,cACP,0CAEF,kBAAC,IAAD,CAAMA,GAAG,YACP,4CCbGG,EATD,kBAEZ,yBAAKJ,UAAU,UACb,yBAAKA,UAAU,aACb,6CCmHSK,EArHJ,kBAET,yBAAKL,UAAU,QACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,eACb,mDACE,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMC,GAAG,YAAT,cAIR,yBAAKD,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,wCACE,6BACE,mnBAYN,yBAAKE,IAAI,4FAA4FC,IAAI,YAE3G,yBAAKH,UAAU,SACb,yBAAKE,IAAI,sFAAsFC,IAAI,eACjG,yBAAKH,UAAU,cACX,qCACE,6BACE,wpBAaE,6BACA,6BACE,uBAAGM,KAAK,0DAAR,QAGF,6BACE,uBAAGA,KAAK,iEAAR,cAGF,6BACA,6BAvBF,seAmCZ,yBAAKN,UAAU,SACX,yBAAKA,UAAU,cACb,oCACE,6BACE,+mBAcR,yBAAKE,IAAI,+EAA+EC,IAAI,SAE9F,yBAAKH,UAAU,SACb,yBAAKE,IAAI,oFAAoFC,IAAI,YAC/F,yBAAKH,UAAU,cACb,wCACE,6BACE,onBCzFHO,EATH,kBAEV,yBAAKP,UAAU,SACb,yBAAKA,UAAU,aACb,wCCKSQ,EATA,kBAEb,yBAAKR,UAAU,YACb,yBAAKA,UAAU,aACb,2CCMSS,EAVC,kBAEd,yBAAKT,UAAU,aACb,yBAAKA,UAAU,aACb,4CCKSU,EATD,kBAEZ,yBAAKV,UAAU,WACb,yBAAKA,UAAU,aACb,0CC2BSW,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOY,KAAK,YAAYC,OAAK,EAACC,UAAWT,IACzC,kBAAC,IAAD,CAAOO,KAAK,SAASE,UAAWP,IAChC,kBAAC,IAAD,CAAOK,KAAK,YAAYE,UAAWN,IACnC,kBAAC,IAAD,CAAOI,KAAK,aAAaE,UAAWC,IACpC,kBAAC,IAAD,CAAOH,KAAK,WAAWE,UAAWJ,KAEtC,kBAAC,EAAD,SCfYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c7579765.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst Nav=() => (\n\n  <div className=\"nav\">\n    <nav>\n      <div className=\"logo\">\n        <Link to=\"/go-zero\">\n          <img src=\"\" alt=\"gozerostayfluffy\" />\n        </Link>\n      </div>\n        <ul className=\"nav-links\">\n          <Link to=\"/about\">\n            <li>About</li>\n          </Link>\n          <Link to=\"/recipies\">\n            <li>Recipies</li>\n          </Link>\n          <Link to=\"/easyswaps\">\n            <li>Easyswaps</li>\n          </Link>\n          <Link to=\"/contact\">\n            <li>Contact</li>\n          </Link>\n        </ul>\n    </nav>\n  </div>\n);\n\n\nexport default Nav;\n","import React from 'react';\n\nconst Footer =() => (\n\n  <div className=\"footer\">\n    <div className=\"impressum\">\n      <p>Regula Popp</p>\n    </div>\n  </div>\n);\n\nexport default Footer;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst Home=() => (\n\n  <div className=\"home\">\n    <div className=\"banner\">\n      <div className=\"banner-text\">\n        <h1>Go zero stay fluffy</h1>\n          <div className=\"banner-btn\">\n            <Link to=\"/contact\">Go zero</Link>\n          </div>\n      </div>\n    </div>\n    <div className=\"container\">\n      <div className=\"tweets\">\n        <div className=\"tweet\">\n          <div className=\"tweet-text\">\n            <h2>Welcome,</h2>\n              <br />\n                <p>At the beginning of 2019, I made the decision to eat less\n                  dairy products. And then I decided to try to avoid buying\n                  things that come in plastic packaging. A few months later,\n                  another decision followed: making my own deodorant... Now,\n                  I'm curious to see where this journey will take me next!\n                  So, it all started with one little decision that led to other,\n                  bigger changes. And all the while I stayed fluffy - happy,\n                  comfortable and cozy! In the hope of encouraging you to take a\n                  step towards a cleaner future, I created this blog. Join me on\n                  my journey and hopefully get inspired to start your own!\n                </p>\n          </div>\n          <img src=\"https://res.cloudinary.com/daf8fgekl/image/upload/v1597929812/gozerostayfluffy_iac0jd.png\" alt=\"fluffy\" />\n        </div>\n        <div className=\"tweet\">\n          <img src=\"https://res.cloudinary.com/daf8fgekl/image/upload/v1597929812/almondmilk_dnm7yy.png\" alt=\"almondmilk\"/>\n            <div className=\"tweet-text\">\n                <h2>Milk,</h2>\n                  <br />\n                    <p>\n                      My first decision at the beginning of 2019 was to reduce dairy\n                      products. Having come out the other end of the puberty-tube\n                      around 10 years ago, I felt like I should have clearer skin\n                      and not those light acne pimples on my face that I first noticed\n                      a few years back...\n                      So, I tried to find out what might help. I read various tips in\n                      different forums, like drinking mint tea would help, which I\n                      tried with little to no effect. Further into my research, I\n                      read that there could be a correlation between the amount of\n                      dairy intake and acne due to iodine and/or hormones in the milk\n                      which might exacerbate acne prone skin.\n                      See for example:\n                      <br/>\n                      <br />\n                        <a href=\"https://www.jaad.org/article/S0190-9622(05)02097-9/pdf\">\n                          Jaad\n                        </a>\n                      <br />\n                        <a href=\"https://jandonline.org/article/S0002-8223(09)01867-7/abstract\">\n                          Jandonline\n                        </a>\n                      <br />\n                      <br />\n                      After having tried clearing my skin by upping my mint tea intake,\n                      I decided to drop my milk drinking habit at the end of January\n                      2019. No more milk - still the occasional cheese or milk in\n                      lasagne but nor more porridge or muesli made with milk - for\n                      a couple of months to see if there would be any visible\n                      improvements. Eight months later I still follow this dietary\n                      habit. So guess what!?! In my case, renouncing regular milk\n                      intake really helped my skin looking more healthy. :D\n                    </p>\n              </div>\n            </div>\n        <div className=\"tweet\">\n            <div className=\"tweet-text\">\n              <h2>Deo,</h2>\n                <br />\n                  <p>\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n                    sed diam nonumy eirmod tempor invidunt ut labore et dolore\n                    magna aliquyam erat, sed diam voluptua. At vero eos et\n                    accusam et justo duo dolores et ea rebum. Stet clita kasd\n                    gubergren, no sea takimata sanctus est Lorem ipsum dolor\n                    sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n                    elitr, sed diam nonumy eirmod tempor invidunt ut labore\n                    et dolore magna aliquyam erat, sed diam voluptua. At vero\n                    eos et accusam et justo duo dolores et ea rebum. Stet clita\n                    kasd gubergren, no sea takimata sanctus est Lorem ipsum\n                    dolor sit amet.\n                  </p>\n            </div>\n          <img src=\"https://res.cloudinary.com/daf8fgekl/image/upload/v1597930526/Deo_wp64yk.jpg\" alt=\"Deo\"/>\n        </div>\n        <div className=\"tweet\">\n          <img src=\"https://res.cloudinary.com/daf8fgekl/image/upload/v1597930835/Reiniger_edhqra.jpg\" alt=\"Cleaner\"/>\n            <div className=\"tweet-text\">\n              <h2>Cleaner,</h2>\n                <br />\n                  <p>\n                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr,\n                    sed diam nonumy eirmod tempor invidunt ut labore et dolore\n                    magna aliquyam erat, sed diam voluptua. At vero eos et\n                    accusam et justo duo dolores et ea rebum. Stet clita kasd\n                    gubergren, no sea takimata sanctus est Lorem ipsum dolor\n                    sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n                    elitr, sed diam nonumy eirmod tempor invidunt ut labore\n                    et dolore magna aliquyam erat, sed diam voluptua. At vero\n                    eos et accusam et justo duo dolores et ea rebum. Stet clita\n                    kasd gubergren, no sea takimata sanctus est Lorem ipsum\n                    dolor sit amet.\n                  </p>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\n\nexport default Home;\n","import React from 'react';\n\nconst About=() => (\n\n  <div className=\"About\">\n    <div className=\"container\">\n      <h1>About</h1>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\n\nconst Recipies=() => (\n\n  <div className=\"Recipies\">\n    <div className=\"container\">\n      <h1>Recipies</h1>\n    </div>\n  </div>\n);\n\nexport default Recipies;\n","import React from 'react';\n\nconst EasySwaps=() => (\n\n  <div className=\"EasySwaps\">\n    <div className=\"container\">\n      <h1>EasySwaps</h1>\n    </div>\n  </div>\n);\n\n\nexport default EasySwaps;\n","import React from 'react';\n\nconst Contact=() => (\n\n  <div className=\"Contact\">\n    <div className=\"container\">\n      <h1>Contact</h1>\n    </div>\n  </div>\n);\n\nexport default Contact;\n","import React from 'react';\nimport './styles/App.scss';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Recipies from './pages/Recipies';\nimport Easyswaps from './pages/Easyswaps';\nimport Contact from './pages/Contact';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n          <Switch>\n            <Route path=\"/go-zero/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/recipies\" component={Recipies} />\n            <Route path=\"/easyswaps\" component={Easyswaps} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}